Symbolic DL
frameworks( Tensorflow ) 
imperative
DL frameworks( Pytorch )
combining(Autograph )

converting an imperative program to symbolic graph : errorss
1. profiling phase : a profiling phase to gather information
2.  automatically analyzing the program context and invalidating
the graphs with outdated context information

Handling Dynamic Features of Python: based on the runtime information
inserts an assertion operation that validates the assumption
-----------------------

the scheduling procedure finishes before executing the GPU kerne
automatically parallelizes the execution of GPU task
1. GPU task scheduling
2. GPU task submission
 schedules
GPU tasks to run in parallel with minimal scheduling overhead
->  a novel ahead-of-time (AoT) scheduling technique
analyzes dependency relationships between operators
finds an optimal stream assignment

-----------------
JANUS
imperative DL 구조를 symbolic graph 구조로 변환할 수 있는 DL frameworks이다. 
python JIT
먼저 python 실행 과정을 profiling 하여 정보를 찾는다.
symbolic graph를 생성하는데 위 정보를 기반으로 한 가정으로 dataflow 그래프를 생성한다.
최적화된 가정은 graph cache로 저장된다.
이후 그래프를 실행한다.
python의 동적인 여러 특징들을 static dataflow로 나타낼 수 있게 생성한다.
